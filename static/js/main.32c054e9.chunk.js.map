{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","togglemode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitilize","msg","App","setmode","setAlert","message","setTimeout","aboutTexts","document","body","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32c054e9.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutTexts}</Link>\n                        </li> */}\n                    </ul>\n                    {/* <form className=\"d-flex\">\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\n                    </form> */}\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutTexts: PropTypes.string\n};\n\n// Navbar.defaultProps={\n//     title: \"Set title here\",\n//     aboutTexts: \"About Texts here\"\n// };\n","import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n    const handleUpclick = () => {\n        // console.log(\"Uppercase was changed \" + text);\n        let newText = text.toUpperCase();\n        props.showAlert(\"Converted to Upper Case!!\",\"success\")\n        setText(newText)\n    }\n    \n    const handleLoclick = () => {\n        // console.log(\"Lowercase was changed \" + text);\n        let newText = text.toLowerCase();\n        props.showAlert(\"Converted to Lower Case!!\",\"success\")\n        setText(newText)\n    }\n\n    const handleClearclick = () => {\n        let newText = \"\";\n        setText(newText)\n        props.showAlert(\"Cleared!!\",\"success\")\n    }\n\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"))\n        props.showAlert(\"All Extra Spaces removed!!\",\"success\");\n\n    }\n\n\n    const handleonchange = (event) => {\n        // console.log(\"On change\")\n        setText(event.target.value)\n    }\n\n\n    const [text, setText] = useState('');\n    // text=\"hfwbujkfhs\";   //Wrong way to change the state \n    // setText(\"sdfghjkh\"); //Right way to change the state\n    return (\n        <>\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#122e59' }}>\n                <h1>{props.heading}</h1>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"my-box\" className=\"form-label\">Example Text Area</label>\n                    <textarea className=\"form-control\" value={text} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : '#122e59' }} onChange={handleonchange} id=\"my-box\" rows=\"6\"></textarea>\n                </div>\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpclick} >Convert to UpperCase</button>\n                <button className=\"btn btn-primary mx-1\" onClick={handleLoclick} >Convert to LowerCase</button>\n                <button className=\"btn btn-primary mx-1\" onClick={handleClearclick} >Clear Text</button>\n                <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n            </div>\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#122e59' }}>\n                <h1>Your Text Summary</h1>\n                <p>{text.split(\" \").length} Words , {text.length} Characters</p>\n                <p>{0.008 * (text.split(\" \").length)} Minutes read</p>\n                <h2>Preview</h2>\n                <p>{text.length>0?text:\"Nothing to Preview\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n\n    const capitilize = (word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\n    }\n\n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitilize(props.alert.type)}</strong>: {props.alert.msg}\n        </div>\n    )\n}\n\nexport default Alert\n","// import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light'); //Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.background = '#122e59';\n      showAlert(\"Dark mode has been Enabled\", \"success\")\n      // document.title='TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title='Install TextUtils';\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title='Amazing App';\n      // }, 1000);\n    }\n    else {\n      setmode('light');\n      document.body.style.background = 'white';\n      showAlert(\"Light mode has been Enabled\", \"success\")\n      // document.title='TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n      {/* <Navbar /> */}\n      {/* <TextForm /> */}\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutTexts=\"About\" mode={mode} togglemode={togglemode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\"> */}\n              {/* <About /> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to Analyse \" mode={mode} />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}